//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iqchampion_design.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTable", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class GameTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.Cell[] TableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.Cell[] Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cell", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Cell : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.User OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Col {
            get {
                return this.ColField;
            }
            set {
                if ((this.ColField.Equals(value) != true)) {
                    this.ColField = value;
                    this.RaisePropertyChanged("Col");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.User Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IIQService")]
    public interface IIQService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/PingPeriod", ReplyAction="http://tempuri.org/IIQService/PingPeriodResponse")]
        int PingPeriod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/PingPeriod", ReplyAction="http://tempuri.org/IIQService/PingPeriodResponse")]
        System.Threading.Tasks.Task<int> PingPeriodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Login", ReplyAction="http://tempuri.org/IIQService/LoginResponse")]
        bool Login(string user, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Login", ReplyAction="http://tempuri.org/IIQService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string user, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Logout", ReplyAction="http://tempuri.org/IIQService/LogoutResponse")]
        bool Logout(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Logout", ReplyAction="http://tempuri.org/IIQService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Ping", ReplyAction="http://tempuri.org/IIQService/PingResponse")]
        bool Ping(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Ping", ReplyAction="http://tempuri.org/IIQService/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/joinQueue", ReplyAction="http://tempuri.org/IIQService/joinQueueResponse")]
        void joinQueue(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/joinQueue", ReplyAction="http://tempuri.org/IIQService/joinQueueResponse")]
        System.Threading.Tasks.Task joinQueueAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/leaveQueue", ReplyAction="http://tempuri.org/IIQService/leaveQueueResponse")]
        void leaveQueue(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/leaveQueue", ReplyAction="http://tempuri.org/IIQService/leaveQueueResponse")]
        System.Threading.Tasks.Task leaveQueueAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getQueuePosition", ReplyAction="http://tempuri.org/IIQService/getQueuePositionResponse")]
        int getQueuePosition(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getQueuePosition", ReplyAction="http://tempuri.org/IIQService/getQueuePositionResponse")]
        System.Threading.Tasks.Task<int> getQueuePositionAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/haveRoom", ReplyAction="http://tempuri.org/IIQService/haveRoomResponse")]
        bool haveRoom(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/haveRoom", ReplyAction="http://tempuri.org/IIQService/haveRoomResponse")]
        System.Threading.Tasks.Task<bool> haveRoomAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getGameTable", ReplyAction="http://tempuri.org/IIQService/getGameTableResponse")]
        iqchampion_design.ServiceReference.GameTable getGameTable(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getGameTable", ReplyAction="http://tempuri.org/IIQService/getGameTableResponse")]
        System.Threading.Tasks.Task<iqchampion_design.ServiceReference.GameTable> getGameTableAsync(string user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIQServiceChannel : iqchampion_design.ServiceReference.IIQService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IQServiceClient : System.ServiceModel.ClientBase<iqchampion_design.ServiceReference.IIQService>, iqchampion_design.ServiceReference.IIQService {
        
        public IQServiceClient() {
        }
        
        public IQServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IQServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IQServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IQServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int PingPeriod() {
            return base.Channel.PingPeriod();
        }
        
        public System.Threading.Tasks.Task<int> PingPeriodAsync() {
            return base.Channel.PingPeriodAsync();
        }
        
        public bool Login(string user, string Password) {
            return base.Channel.Login(user, Password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string user, string Password) {
            return base.Channel.LoginAsync(user, Password);
        }
        
        public bool Logout(string user) {
            return base.Channel.Logout(user);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string user) {
            return base.Channel.LogoutAsync(user);
        }
        
        public bool Ping(string user) {
            return base.Channel.Ping(user);
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync(string user) {
            return base.Channel.PingAsync(user);
        }
        
        public void joinQueue(string user) {
            base.Channel.joinQueue(user);
        }
        
        public System.Threading.Tasks.Task joinQueueAsync(string user) {
            return base.Channel.joinQueueAsync(user);
        }
        
        public void leaveQueue(string user) {
            base.Channel.leaveQueue(user);
        }
        
        public System.Threading.Tasks.Task leaveQueueAsync(string user) {
            return base.Channel.leaveQueueAsync(user);
        }
        
        public int getQueuePosition(string user) {
            return base.Channel.getQueuePosition(user);
        }
        
        public System.Threading.Tasks.Task<int> getQueuePositionAsync(string user) {
            return base.Channel.getQueuePositionAsync(user);
        }
        
        public bool haveRoom(string user) {
            return base.Channel.haveRoom(user);
        }
        
        public System.Threading.Tasks.Task<bool> haveRoomAsync(string user) {
            return base.Channel.haveRoomAsync(user);
        }
        
        public iqchampion_design.ServiceReference.GameTable getGameTable(string user) {
            return base.Channel.getGameTable(user);
        }
        
        public System.Threading.Tasks.Task<iqchampion_design.ServiceReference.GameTable> getGameTableAsync(string user) {
            return base.Channel.getGameTableAsync(user);
        }
    }
}
