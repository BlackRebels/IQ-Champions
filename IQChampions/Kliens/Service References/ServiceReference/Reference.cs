//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iqchampion_design.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.User SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Msg {
            get {
                return this.MsgField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgField, value) != true)) {
                    this.MsgField = value;
                    this.RaisePropertyChanged("Msg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.User Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.AnswerResult AnswerResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.States StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.AnswerResult AnswerResult {
            get {
                return this.AnswerResultField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswerResultField, value) != true)) {
                    this.AnswerResultField = value;
                    this.RaisePropertyChanged("AnswerResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Online {
            get {
                return this.OnlineField;
            }
            set {
                if ((this.OnlineField.Equals(value) != true)) {
                    this.OnlineField = value;
                    this.RaisePropertyChanged("Online");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Point {
            get {
                return this.PointField;
            }
            set {
                if ((this.PointField.Equals(value) != true)) {
                    this.PointField = value;
                    this.RaisePropertyChanged("Point");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.States State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnswerResult", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class AnswerResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Answer {
            get {
                return this.AnswerField;
            }
            set {
                if ((this.AnswerField.Equals(value) != true)) {
                    this.AnswerField = value;
                    this.RaisePropertyChanged("Answer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="States", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    public enum States : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IDLE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MOVE = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ANSWER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FINISHED = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameTable", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class GameTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.Cell[] TableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.Cell[] Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cell", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Cell : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.User OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Col {
            get {
                return this.ColField;
            }
            set {
                if ((this.ColField.Equals(value) != true)) {
                    this.ColField = value;
                    this.RaisePropertyChanged("Col");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.User Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadAnswer1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadAnswer2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BadAnswer3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodAnswerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuestionnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BadAnswer1 {
            get {
                return this.BadAnswer1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BadAnswer1Field, value) != true)) {
                    this.BadAnswer1Field = value;
                    this.RaisePropertyChanged("BadAnswer1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BadAnswer2 {
            get {
                return this.BadAnswer2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BadAnswer2Field, value) != true)) {
                    this.BadAnswer2Field = value;
                    this.RaisePropertyChanged("BadAnswer2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BadAnswer3 {
            get {
                return this.BadAnswer3Field;
            }
            set {
                if ((object.ReferenceEquals(this.BadAnswer3Field, value) != true)) {
                    this.BadAnswer3Field = value;
                    this.RaisePropertyChanged("BadAnswer3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodAnswer {
            get {
                return this.GoodAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodAnswerField, value) != true)) {
                    this.GoodAnswerField = value;
                    this.RaisePropertyChanged("GoodAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Questionn {
            get {
                return this.QuestionnField;
            }
            set {
                if ((object.ReferenceEquals(this.QuestionnField, value) != true)) {
                    this.QuestionnField = value;
                    this.RaisePropertyChanged("Questionn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Statistic", Namespace="http://schemas.datacontract.org/2004/07/IQChampionsServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Statistic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private iqchampion_design.ServiceReference.User[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public iqchampion_design.ServiceReference.User[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IIQService")]
    public interface IIQService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/PingPeriod", ReplyAction="http://tempuri.org/IIQService/PingPeriodResponse")]
        int PingPeriod();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/PingPeriod", ReplyAction="http://tempuri.org/IIQService/PingPeriodResponse")]
        System.Threading.Tasks.Task<int> PingPeriodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Login", ReplyAction="http://tempuri.org/IIQService/LoginResponse")]
        bool Login(string user, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Login", ReplyAction="http://tempuri.org/IIQService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(string user, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Logout", ReplyAction="http://tempuri.org/IIQService/LogoutResponse")]
        bool Logout(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Logout", ReplyAction="http://tempuri.org/IIQService/LogoutResponse")]
        System.Threading.Tasks.Task<bool> LogoutAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Ping", ReplyAction="http://tempuri.org/IIQService/PingResponse")]
        bool Ping(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Ping", ReplyAction="http://tempuri.org/IIQService/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getUserList", ReplyAction="http://tempuri.org/IIQService/getUserListResponse")]
        string[] getUserList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getUserList", ReplyAction="http://tempuri.org/IIQService/getUserListResponse")]
        System.Threading.Tasks.Task<string[]> getUserListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getUserStats", ReplyAction="http://tempuri.org/IIQService/getUserStatsResponse")]
        string[] getUserStats(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getUserStats", ReplyAction="http://tempuri.org/IIQService/getUserStatsResponse")]
        System.Threading.Tasks.Task<string[]> getUserStatsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Send", ReplyAction="http://tempuri.org/IIQService/SendResponse")]
        void Send(string user, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Send", ReplyAction="http://tempuri.org/IIQService/SendResponse")]
        System.Threading.Tasks.Task SendAsync(string user, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getMesages", ReplyAction="http://tempuri.org/IIQService/getMesagesResponse")]
        iqchampion_design.ServiceReference.Message[] getMesages(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getMesages", ReplyAction="http://tempuri.org/IIQService/getMesagesResponse")]
        System.Threading.Tasks.Task<iqchampion_design.ServiceReference.Message[]> getMesagesAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/joinQueue", ReplyAction="http://tempuri.org/IIQService/joinQueueResponse")]
        void joinQueue(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/joinQueue", ReplyAction="http://tempuri.org/IIQService/joinQueueResponse")]
        System.Threading.Tasks.Task joinQueueAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/leaveQueue", ReplyAction="http://tempuri.org/IIQService/leaveQueueResponse")]
        void leaveQueue(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/leaveQueue", ReplyAction="http://tempuri.org/IIQService/leaveQueueResponse")]
        System.Threading.Tasks.Task leaveQueueAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getQueuePosition", ReplyAction="http://tempuri.org/IIQService/getQueuePositionResponse")]
        int getQueuePosition(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getQueuePosition", ReplyAction="http://tempuri.org/IIQService/getQueuePositionResponse")]
        System.Threading.Tasks.Task<int> getQueuePositionAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/haveRoom", ReplyAction="http://tempuri.org/IIQService/haveRoomResponse")]
        bool haveRoom(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/haveRoom", ReplyAction="http://tempuri.org/IIQService/haveRoomResponse")]
        System.Threading.Tasks.Task<bool> haveRoomAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getGameTable", ReplyAction="http://tempuri.org/IIQService/getGameTableResponse")]
        iqchampion_design.ServiceReference.GameTable getGameTable(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getGameTable", ReplyAction="http://tempuri.org/IIQService/getGameTableResponse")]
        System.Threading.Tasks.Task<iqchampion_design.ServiceReference.GameTable> getGameTableAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getMyState", ReplyAction="http://tempuri.org/IIQService/getMyStateResponse")]
        iqchampion_design.ServiceReference.States getMyState(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getMyState", ReplyAction="http://tempuri.org/IIQService/getMyStateResponse")]
        System.Threading.Tasks.Task<iqchampion_design.ServiceReference.States> getMyStateAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Move", ReplyAction="http://tempuri.org/IIQService/MoveResponse")]
        bool Move(string user, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/Move", ReplyAction="http://tempuri.org/IIQService/MoveResponse")]
        System.Threading.Tasks.Task<bool> MoveAsync(string user, int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getQuestion", ReplyAction="http://tempuri.org/IIQService/getQuestionResponse")]
        iqchampion_design.ServiceReference.Question getQuestion(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getQuestion", ReplyAction="http://tempuri.org/IIQService/getQuestionResponse")]
        System.Threading.Tasks.Task<iqchampion_design.ServiceReference.Question> getQuestionAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/answerQuestion", ReplyAction="http://tempuri.org/IIQService/answerQuestionResponse")]
        bool answerQuestion(string user, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/answerQuestion", ReplyAction="http://tempuri.org/IIQService/answerQuestionResponse")]
        System.Threading.Tasks.Task<bool> answerQuestionAsync(string user, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getStatistics", ReplyAction="http://tempuri.org/IIQService/getStatisticsResponse")]
        iqchampion_design.ServiceReference.Statistic getStatistics(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IIQService/getStatistics", ReplyAction="http://tempuri.org/IIQService/getStatisticsResponse")]
        System.Threading.Tasks.Task<iqchampion_design.ServiceReference.Statistic> getStatisticsAsync(string user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IIQServiceChannel : iqchampion_design.ServiceReference.IIQService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IQServiceClient : System.ServiceModel.ClientBase<iqchampion_design.ServiceReference.IIQService>, iqchampion_design.ServiceReference.IIQService {
        
        public IQServiceClient() {
        }
        
        public IQServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IQServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IQServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IQServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int PingPeriod() {
            return base.Channel.PingPeriod();
        }
        
        public System.Threading.Tasks.Task<int> PingPeriodAsync() {
            return base.Channel.PingPeriodAsync();
        }
        
        public bool Login(string user, string Password) {
            return base.Channel.Login(user, Password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(string user, string Password) {
            return base.Channel.LoginAsync(user, Password);
        }
        
        public bool Logout(string user) {
            return base.Channel.Logout(user);
        }
        
        public System.Threading.Tasks.Task<bool> LogoutAsync(string user) {
            return base.Channel.LogoutAsync(user);
        }
        
        public bool Ping(string user) {
            return base.Channel.Ping(user);
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync(string user) {
            return base.Channel.PingAsync(user);
        }
        
        public string[] getUserList() {
            return base.Channel.getUserList();
        }
        
        public System.Threading.Tasks.Task<string[]> getUserListAsync() {
            return base.Channel.getUserListAsync();
        }
        
        public string[] getUserStats(string username) {
            return base.Channel.getUserStats(username);
        }
        
        public System.Threading.Tasks.Task<string[]> getUserStatsAsync(string username) {
            return base.Channel.getUserStatsAsync(username);
        }
        
        public void Send(string user, string message) {
            base.Channel.Send(user, message);
        }
        
        public System.Threading.Tasks.Task SendAsync(string user, string message) {
            return base.Channel.SendAsync(user, message);
        }
        
        public iqchampion_design.ServiceReference.Message[] getMesages(string user) {
            return base.Channel.getMesages(user);
        }
        
        public System.Threading.Tasks.Task<iqchampion_design.ServiceReference.Message[]> getMesagesAsync(string user) {
            return base.Channel.getMesagesAsync(user);
        }
        
        public void joinQueue(string user) {
            base.Channel.joinQueue(user);
        }
        
        public System.Threading.Tasks.Task joinQueueAsync(string user) {
            return base.Channel.joinQueueAsync(user);
        }
        
        public void leaveQueue(string user) {
            base.Channel.leaveQueue(user);
        }
        
        public System.Threading.Tasks.Task leaveQueueAsync(string user) {
            return base.Channel.leaveQueueAsync(user);
        }
        
        public int getQueuePosition(string user) {
            return base.Channel.getQueuePosition(user);
        }
        
        public System.Threading.Tasks.Task<int> getQueuePositionAsync(string user) {
            return base.Channel.getQueuePositionAsync(user);
        }
        
        public bool haveRoom(string user) {
            return base.Channel.haveRoom(user);
        }
        
        public System.Threading.Tasks.Task<bool> haveRoomAsync(string user) {
            return base.Channel.haveRoomAsync(user);
        }
        
        public iqchampion_design.ServiceReference.GameTable getGameTable(string user) {
            return base.Channel.getGameTable(user);
        }
        
        public System.Threading.Tasks.Task<iqchampion_design.ServiceReference.GameTable> getGameTableAsync(string user) {
            return base.Channel.getGameTableAsync(user);
        }
        
        public iqchampion_design.ServiceReference.States getMyState(string user) {
            return base.Channel.getMyState(user);
        }
        
        public System.Threading.Tasks.Task<iqchampion_design.ServiceReference.States> getMyStateAsync(string user) {
            return base.Channel.getMyStateAsync(user);
        }
        
        public bool Move(string user, int x, int y) {
            return base.Channel.Move(user, x, y);
        }
        
        public System.Threading.Tasks.Task<bool> MoveAsync(string user, int x, int y) {
            return base.Channel.MoveAsync(user, x, y);
        }
        
        public iqchampion_design.ServiceReference.Question getQuestion(string user) {
            return base.Channel.getQuestion(user);
        }
        
        public System.Threading.Tasks.Task<iqchampion_design.ServiceReference.Question> getQuestionAsync(string user) {
            return base.Channel.getQuestionAsync(user);
        }
        
        public bool answerQuestion(string user, int id) {
            return base.Channel.answerQuestion(user, id);
        }
        
        public System.Threading.Tasks.Task<bool> answerQuestionAsync(string user, int id) {
            return base.Channel.answerQuestionAsync(user, id);
        }
        
        public iqchampion_design.ServiceReference.Statistic getStatistics(string user) {
            return base.Channel.getStatistics(user);
        }
        
        public System.Threading.Tasks.Task<iqchampion_design.ServiceReference.Statistic> getStatisticsAsync(string user) {
            return base.Channel.getStatisticsAsync(user);
        }
    }
}
